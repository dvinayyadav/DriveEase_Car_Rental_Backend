// <auto-generated />
using System;
using Car_Rental_Backend_Application.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Car_Rental_Backend_Application.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    [Migration("20250214064606_ContactAdded")]
    partial class ContactAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Car_Rental_Backend_Application.Data.Entities.Admin", b =>
                {
                    b.Property<int>("Admin_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Admin_ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Admin_ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            Admin_ID = 1,
                            Email = "devaravinay698.com",
                            Password = "Vinay@123",
                            Username = "devaravinay698"
                        },
                        new
                        {
                            Admin_ID = 2,
                            Email = "narasimhagorla45@gmail.com",
                            Password = "Narasimha@123",
                            Username = "narasimhagorla45"
                        },
                        new
                        {
                            Admin_ID = 3,
                            Email = "rupeshsanagala523@gmail.com",
                            Password = "Rupesh@123",
                            Username = "rupeshsanagala523"
                        },
                        new
                        {
                            Admin_ID = 4,
                            Email = "ajaythella0@gmail.com",
                            Password = "Ajay@123",
                            Username = "ajaythella0"
                        });
                });

            modelBuilder.Entity("Car_Rental_Backend_Application.Data.Entities.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateOnly>("BookingDate")
                        .HasColumnType("date");

                    b.Property<int>("Car_ID")
                        .HasColumnType("int");

                    b.Property<DateOnly>("PickupDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("ReturnDate")
                        .HasColumnType("date");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("Car_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Car_Rental_Backend_Application.Data.Entities.Cancellation", b =>
                {
                    b.Property<int>("Cancellation_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Cancellation_ID"));

                    b.Property<int>("Booking_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Cancellation_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Cancellation_ID");

                    b.HasIndex("Booking_ID");

                    b.ToTable("Cancellations");
                });

            modelBuilder.Entity("Car_Rental_Backend_Application.Data.Entities.Car", b =>
                {
                    b.Property<int>("Car_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Car_ID"));

                    b.Property<string>("Availability_Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("License_Plate")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PricePerDay")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Car_ID");

                    b.HasIndex("License_Plate")
                        .IsUnique();

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Car_ID = 1,
                            Availability_Status = "Available",
                            Brand = "Honda",
                            Category = "Sedan",
                            License_Plate = "ABC123",
                            Location = "Mumbai",
                            Model = "City",
                            PricePerDay = 50,
                            Year = 2022
                        },
                        new
                        {
                            Car_ID = 2,
                            Availability_Status = "Available",
                            Brand = "Hyundai",
                            Category = "SUV",
                            License_Plate = "XYZ456",
                            Location = "Delhi",
                            Model = "Creta",
                            PricePerDay = 55,
                            Year = 2021
                        },
                        new
                        {
                            Car_ID = 3,
                            Availability_Status = "Available",
                            Brand = "Hyundai",
                            Category = "Hatchback",
                            License_Plate = "HYU789",
                            Location = "Bangalore",
                            Model = "i20",
                            PricePerDay = 40,
                            Year = 2023
                        },
                        new
                        {
                            Car_ID = 4,
                            Availability_Status = "Available",
                            Brand = "Mahindra",
                            Category = "SUV",
                            License_Plate = "MH300T",
                            Location = "Chennai",
                            Model = "TUV 300",
                            PricePerDay = 60,
                            Year = 2020
                        },
                        new
                        {
                            Car_ID = 5,
                            Availability_Status = "Available",
                            Brand = "Tata",
                            Category = "Hatchback",
                            License_Plate = "TAT456",
                            Location = "Kolkata",
                            Model = "Punch",
                            PricePerDay = 45,
                            Year = 2022
                        },
                        new
                        {
                            Car_ID = 6,
                            Availability_Status = "Available",
                            Brand = "Suzuki",
                            Category = "Hatchback",
                            License_Plate = "SUZ123",
                            Location = "Hyderabad",
                            Model = "Celerio",
                            PricePerDay = 35,
                            Year = 2021
                        },
                        new
                        {
                            Car_ID = 7,
                            Availability_Status = "Available",
                            Brand = "Tata",
                            Category = "Hatchback",
                            License_Plate = "TIG789",
                            Location = "Pune",
                            Model = "Tiago",
                            PricePerDay = 38,
                            Year = 2022
                        },
                        new
                        {
                            Car_ID = 8,
                            Availability_Status = "Available",
                            Brand = "Toyota",
                            Category = "Sedan",
                            License_Plate = "TOY999",
                            Location = "Ahmedabad",
                            Model = "Corolla",
                            PricePerDay = 55,
                            Year = 2019
                        },
                        new
                        {
                            Car_ID = 9,
                            Availability_Status = "Available",
                            Brand = "Mahindra",
                            Category = "SUV",
                            License_Plate = "BOL345",
                            Location = "Jaipur",
                            Model = "Bolero",
                            PricePerDay = 50,
                            Year = 2020
                        },
                        new
                        {
                            Car_ID = 10,
                            Availability_Status = "Available",
                            Brand = "Chevrolet",
                            Category = "Luxury",
                            License_Plate = "CHEV789",
                            Location = "Surat",
                            Model = "Malibu",
                            PricePerDay = 65,
                            Year = 2018
                        },
                        new
                        {
                            Car_ID = 11,
                            Availability_Status = "Available",
                            Brand = "Maruti Suzuki",
                            Category = "MUV",
                            License_Plate = "ERT123",
                            Location = "Lucknow",
                            Model = "Ertiga",
                            PricePerDay = 50,
                            Year = 2022
                        },
                        new
                        {
                            Car_ID = 12,
                            Availability_Status = "Available",
                            Brand = "Honda",
                            Category = "Sedan",
                            License_Plate = "CIV567",
                            Location = "Nagpur",
                            Model = "Civic",
                            PricePerDay = 70,
                            Year = 2021
                        },
                        new
                        {
                            Car_ID = 13,
                            Availability_Status = "Available",
                            Brand = "Toyota",
                            Category = "MUV",
                            License_Plate = "INN999",
                            Location = "Indore",
                            Model = "Innova",
                            PricePerDay = 80,
                            Year = 2023
                        },
                        new
                        {
                            Car_ID = 14,
                            Availability_Status = "Available",
                            Brand = "Jeep",
                            Category = "SUV",
                            License_Plate = "JEEP123",
                            Location = "Patna",
                            Model = "Compass",
                            PricePerDay = 75,
                            Year = 2020
                        },
                        new
                        {
                            Car_ID = 15,
                            Availability_Status = "Available",
                            Brand = "Kia",
                            Category = "SUV",
                            License_Plate = "KIA456",
                            Location = "Bhopal",
                            Model = "Seltos",
                            PricePerDay = 60,
                            Year = 2022
                        },
                        new
                        {
                            Car_ID = 16,
                            Availability_Status = "Available",
                            Brand = "Mahindra",
                            Category = "SUV",
                            License_Plate = "MOR123",
                            Location = "Vadodara",
                            Model = "Morrozo",
                            PricePerDay = 70,
                            Year = 2021
                        },
                        new
                        {
                            Car_ID = 17,
                            Availability_Status = "Available",
                            Brand = "Mahindra",
                            Category = "SUV",
                            License_Plate = "XUV700",
                            Location = "Ludhiana",
                            Model = "XUV700",
                            PricePerDay = 85,
                            Year = 2022
                        },
                        new
                        {
                            Car_ID = 18,
                            Availability_Status = "Available",
                            Brand = "Mahindra",
                            Category = "SUV",
                            License_Plate = "XUV300",
                            Location = "Agra",
                            Model = "XUV300",
                            PricePerDay = 55,
                            Year = 2020
                        },
                        new
                        {
                            Car_ID = 19,
                            Availability_Status = "Available",
                            Brand = "Mahindra",
                            Category = "SUV",
                            License_Plate = "THAR999",
                            Location = "Nashik",
                            Model = "Thar",
                            PricePerDay = 90,
                            Year = 2023
                        },
                        new
                        {
                            Car_ID = 20,
                            Availability_Status = "Available",
                            Brand = "Maruti Suzuki",
                            Category = "Sedan",
                            License_Plate = "CIAZ567",
                            Location = "Meerut",
                            Model = "Ciaz",
                            PricePerDay = 50,
                            Year = 2019
                        },
                        new
                        {
                            Car_ID = 21,
                            Availability_Status = "Available",
                            Brand = "Nissan",
                            Category = "Sedan",
                            License_Plate = "ALTIMA1",
                            Location = "Rajkot",
                            Model = "Altima",
                            PricePerDay = 75,
                            Year = 2021
                        },
                        new
                        {
                            Car_ID = 22,
                            Availability_Status = "Available",
                            Brand = "Tata",
                            Category = "Hatchback",
                            License_Plate = "ALT123",
                            Location = "Jamshedpur",
                            Model = "Altroz Dark Edition",
                            PricePerDay = 60,
                            Year = 2022
                        },
                        new
                        {
                            Car_ID = 23,
                            Availability_Status = "Available",
                            Brand = "Tata",
                            Category = "SUV",
                            License_Plate = "SAFARI1",
                            Location = "Amritsar",
                            Model = "Safari",
                            PricePerDay = 85,
                            Year = 2023
                        },
                        new
                        {
                            Car_ID = 24,
                            Availability_Status = "Available",
                            Brand = "Hyundai",
                            Category = "Sedan",
                            License_Plate = "VERNA88",
                            Location = "Jodhpur",
                            Model = "Verna",
                            PricePerDay = 55,
                            Year = 2022
                        },
                        new
                        {
                            Car_ID = 25,
                            Availability_Status = "Available",
                            Brand = "Volkswagen",
                            Category = "Luxury",
                            License_Plate = "JET789",
                            Location = "Dehradun",
                            Model = "Jetta",
                            PricePerDay = 70,
                            Year = 2019
                        });
                });

            modelBuilder.Entity("Car_Rental_Backend_Application.Data.Entities.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Full_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Car_Rental_Backend_Application.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OTP")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("ResetTokenExpiry")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Car_Rental_Backend_Application.Data.Entities.Booking", b =>
                {
                    b.HasOne("Car_Rental_Backend_Application.Data.Entities.Car", "Car")
                        .WithMany("Bookings")
                        .HasForeignKey("Car_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Car_Rental_Backend_Application.Data.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Car_Rental_Backend_Application.Data.Entities.Cancellation", b =>
                {
                    b.HasOne("Car_Rental_Backend_Application.Data.Entities.Booking", "Booking")
                        .WithMany("Cancellations")
                        .HasForeignKey("Booking_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Car_Rental_Backend_Application.Data.Entities.Booking", b =>
                {
                    b.Navigation("Cancellations");
                });

            modelBuilder.Entity("Car_Rental_Backend_Application.Data.Entities.Car", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Car_Rental_Backend_Application.Data.Entities.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
